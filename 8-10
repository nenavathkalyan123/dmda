data<-c(2,3,4,8,10)

mean_value<-mean(data)

print(paste("Mean:",mean_value))

median_value<-median(data)

print(paste("Median:",median_value))

getmode<-function(data)
  
{
  
  uniq<-unique(data)
  
  uniq[which.max(tabulate(match(data,uniq)))]
  
}

result<-getmode(data)

print(result)

---------------------8b---------------------------
input <-mtcars[,c("am", "mpg","hp")]
print(head(input))
input<-mtcars
result1<-aov(mpg~hp*am,data = input)
print(summary(result1))
result2<-aov(mpg~hp+am,data = input)
print(summary(result2))
print(anova(result1,result2))
boxplot(anova(result1,result2))

----------------------9a-----------------------------------
x<-c(141,134,178,156,108,116,119,143,162,130)
y<-c(62,85,56,21,47,76,92,62,58,90)
result<-lm(y~x)
print(summary(result))
png(file="LINEAR.png")
plot(x,y,col="red",main="weekly Sales Report",abline(lm(y~x)),cex=1.3,
pch=16,xlab="weeks",ylab="sales")
dev.off()
--------------------9b-=---------------------------------------
input<-mtcars[,c("mpg","wt","disp","hp")]
result<-lm(mpg~wt+disp*hp,data=input)
print(summary(result))
png(file="MultyLinearRegressiongraph.png")
plot(result)
#residualplots(result)
dev.off()


---------------------9c------------------------------

claimants <- read.csv("C:/Users/student/Downloads/claimants.csv")

#Finding null values
sum(is.na(claimants))
#Removing null values- na.omit(dataset)
claimants<-na.omit(claimants)
names(claimants)
# Logistic Regression
logit<-glm(ATTORNEY ~ factor(CLMSEX) + factor(CLMINSUR) + factor(SEATBELT) + CLMAGE + LOSS,family="binomial",data=claimants)
summary(logit)
logit
#residualplots(logit)

#Confusion Matrix Table
#predict(modelobject,testdataset)
prob=predict(logit,type=c("response"),claimants)
prob
#table(dataframe1.dataframe2) ..to create 2x2 matrix
confusion<-table(prob>0.5,claimants$ATTORNEY)
confusion

# Model Accuracy
#adding diagonal elements in the confusion matrix
Accuracy<-sum(diag(confusion))/sum(confusion)
Accuracy
## ROC Curve
#Extract from the fitted model object the vector of fitted probabilities:
install.packages("ROCR")
install.packages("pROC")
library(ROCR)
library(pROC)
#prediction(probability values from model,y variable)
rocrpred<-prediction(prob,claimants$ATTORNEY)
rocrpref<-performance(rocrpred,'tpr','fpr')
plot(rocrpref,colorsize=T,text.adj=c(-0.2,1.4))

plot(rocrpref)
auc <- auc(claimants$ATTORNEY ~ prob)
auc

-------------------------------9d-------------------------------------

warpbreaks
input <- warpbreaks
input
print(head(input))
plot(input)

output <-glm(formula = breaks ~ wool+tension, data = warpbreaks,family ="poisson")
print(summary(output))
plot(output)

--------------------------------10a------------------------------------
snowfall<-c(630.4,911.5,683.5,790,1170.8,860.1,1330.6,996.6,783.2,982,881.8,1021)
snowfall_timeseries<- ts(snowfall,start = c(2023,1),frequency =12)
print(snowfall_timeseries)
png(file = "snowfall.png")
plot(snowfall_timeseries)
dev.off()
------------------------------------10b-----------------------------------------

xvalues <- c(-1.6,2.1,2,2.23,3.71,3.25,3.4,3.86,-1.19,2.21)
yvalues <- c(5.19,7.43,6.94,8.11,18.75,14.88,16.06,19.12,3.21,7.58)
png(file ="nls.png")
plot(xvalues,yvalues)
model <- nls(yvalues ~ b1*xvalues^2+b2,start = list(b1=1,b2=3))
new.data <- data.frame(xvalues = seq(min(xvalues),max(xvalues),len=100))
lines(new.data$xvalues,predict(model,newdata = new.data))
dev.off()
print(sum(resid(model)^2))
print(confint(model))

-------------------------------------------10c----------------------

data("iris")
install.packages("caret")
install.packages("C50")
library(caret)
library(C50)
set.seed(7)
inTraininglocal<-createDataPartition(iris$Species,p=.70,list=F)
training<-iris[inTraininglocal,]
testing<-iris[-inTraininglocal,]
model<-C5.0(Species~.,data = training)
summary(model)
pred<-predict.C5.0(model,testing[,-5])
a<-table(testing$Species,pred)
sum(diag(a))/sum(a)
png(file = "model.png")
plot(model)
dev.off()
-------------------------------11a-------------------------------------
x <- seq(0, 1, by =0.02)
y <- qnorm(x, mean= 2, sd= 1)
png(file = "qnorm1.png")
plot(x, y)
dev.off()

y <- rnorm(50)
png(file = "rnorm1.png")
hist(y, main = "Normal Distribution")
dev.off()
---------------------------11b---------------------------
x <- seq(0,50,by = 1)
y <- dbinom(x, 50, 0.5)
png(file = "dbinom.png")
plot(x, y)
dev.off()

x <- pbinom(26,51,0.5)
print(x)
plot(x)

x <- qbinom(0.25, 30, 1/2)
print(x)
plot(x)

x <- rbinom(8,150,.4)
print(x)
plot(x)

-------12------------------
library("MASS")
print(str(Cars93))
car_data<- data.frame(Cars93$AirBags, Cars93$Type)
car_data = table(Cars93$AirBags, Cars93$Type)
print(car_data)
smoothScatter(car_data)
print(chisq.test(car_data))



x<-c(0.593, 0.142, 0.329, 0.691, 0.231, 0.793, 0.519, 0.392, 0.418)
t.test(x,alternative = "greater", mu=0.3)


x <- rnorm(50, mean = 0, sd = 2)
y <- rnorm(30, mean = 1, sd = 1)
var.test(x,y)
var.test(lm(x ~ 1), lm(y ~ 1))
